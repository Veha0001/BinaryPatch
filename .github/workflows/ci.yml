name: CI

on: [push, pull_request]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        target:
          windows-latest: x86_64-pc-windows-msvc
          ubuntu-latest: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo Caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: cargo-${{ matrix.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        run: |
          rustup default stable
          rustup target add ${{ matrix.target[matrix.os] }}
          rustc -vV
          cargo -vV

      - name: Build
        run: |
          cargo build 
          cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BinaryPatch-${{ matrix.os }}
          path: |
            target/debug/${{ matrix.os == 'windows-latest' && 'Patcher.exe' || 'Patcher' }}
            target/release/${{ matrix.os == 'windows-latest' && 'Patcher.exe' || 'Patcher' }}
          if-no-files-found: error

  release:
    if: ${{ github.event_name == 'push' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v2.2.1
        with:
          name: Binary Patcher
          tag_name: latest-nightly
          files: |
            target/release/Patcher
            target/release/Patcher.exe
